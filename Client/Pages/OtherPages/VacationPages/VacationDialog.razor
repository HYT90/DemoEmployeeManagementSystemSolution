<SfDialog Width="280px" IsModal="true" ShowCloseIcon="true" @bind-Visible="IsVisible">
    <DialogEvents OnOpen="OpenDialog"></DialogEvents>

    <DialogTemplates>
        <Header>@Title Employee's Vacation</Header>
        <Content>
            <EditForm Model="ItemModel" Enhance OnSubmit="Save">
                <div class="card border-success">
                    <div class="card-body">
                        <div class="form-group">
                            <label class="form-label">Employee Id</label>
                            <input @bind="ItemModel.EmployeeId" class="form-control" disabled />
                        </div>
                        <div class="form-group mt-2">
                            <label class="form-label">Start Date</label>
                            <InputDate @bind-Value="ItemModel.StartDate" class="form-control" />
                        </div>
                        <div class="form-group mt-2">
                            <label class="form-label">Number of days</label>
                            <InputNumber @bind-Value="ItemModel.NumberOfDays" class="form-control" />
                        </div>
                        <div class="form-group mt-2">
                            <label class="form-label">End Date</label>
                            <input value="@ItemModel.EndDate.Date" class="form-control" disabled />
                        </div>
                        <div class="form-group mt-3 mb-3">
                            <label class="form-label">Select Type</label>
                            @{
                                string selected = ItemModel.VacationType is null ? "Select Type" : ItemModel.VacationType!.Name;
                                <SfDropDownList TValue="string" TItem="VacationType" Placeholder="@selected" DataSource="VacationTypes">
                                    <DropDownListFieldSettings Value="Id" Text="Name"></DropDownListFieldSettings>
                                    <DropDownListEvents TValue="string" TItem="VacationType" ValueChange="OnValueChange"></DropDownListEvents>
                                </SfDropDownList>
                            }
                        </div>
                    </div>
                </div>
            </EditForm>
        </Content>
    </DialogTemplates>

    <DialogButtons>
        <DialogButton Content="SAVE" Type="ButtonType.Submit" IsPrimary="true" OnClick="Save"></DialogButton>
    </DialogButtons>
</SfDialog>

@code {
    [Parameter] public Vacation ItemModel { get; set; } = new();
    [Parameter] public List<VacationType> VacationTypes { get; set; } = new();
    [Parameter] public EventCallback<Vacation> HandleSaveOperationEvent { get; set; }
    private bool IsVisible { get; set; } = false;
    public string Title { get; set; } = "Add";

    public void OpenDialog()
    {
        IsVisible = true;
        StateHasChanged();
    }

    public void CloseDialog()
    {
        IsVisible = false;
        StateHasChanged();
    }

    async void Save()
    {
        if (ItemModel.VacationTypeId <= 0)
            await dialogService.AlertAsync("You need to provide Overtime type.", "Alert!");
        else
            await HandleSaveOperationEvent.InvokeAsync(ItemModel);
    }

    public void OnValueChange(ChangeEventArgs<string, VacationType> args)
    {
        ItemModel.VacationTypeId = int.Parse(args.Value.ToString());
    }

    public void ChangeTitle(string title)
    {
        Title = title;
    }
}