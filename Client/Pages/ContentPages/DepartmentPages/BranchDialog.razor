@inject SfDialogService dialogService

<SfDialog Width="280px" IsModal="true" ShowCloseIcon="true" @bind-Visible="IsVisible">
    <DialogEvents OnOpen="OpenDialog"></DialogEvents>

    <DialogTemplates>
        <Header>@Title Branch</Header>
        <Content>
            <EditForm Model="Branch" Enhance OnSubmit="Save">
                <div class="card border-success">
                    <div class="card-body">
                        <div class="form-group">
                            <label class="form-label">Id</label>
                            <input @bind="Branch.Id" class="form-control" disabled />
                        </div>
                        <div class="form-group">
                            <label class="form-label">Name</label>
                            <InputText @bind-Value="Branch.Name" class="form-control" />
                        </div>
                        <div class="form-group mt-3 mb-3">
                            <label class="form-label">Select Department</label>

                            @if (Branch.Department != null)
                            {
                                string selected = Branch.Department!.Name;
                                <SfDropDownList TValue="string" TItem="Department" Placeholder="@selected" DataSource="Departments">
                                    <DropDownListFieldSettings Value="Id" Text="Name"></DropDownListFieldSettings>
                                    <DropDownListEvents TValue="string" TItem="Department" ValueChange="OnValueChange"></DropDownListEvents>
                                </SfDropDownList>
                            }
                            else
                            {
                                <SfDropDownList TValue="string" TItem="Department" Placeholder="Select Department" DataSource="Departments">
                                    <DropDownListFieldSettings Value="Id" Text="Name"></DropDownListFieldSettings>
                                    <DropDownListEvents TValue="string" TItem="Department" ValueChange="OnValueChange"></DropDownListEvents>
                                </SfDropDownList>
                            }
                        </div>
                    </div>
                    <div class="card-footer">
                        <button class="btn btn-primary float-end" type="submit">SAVE</button>
                    </div>
                </div>
            </EditForm>
        </Content>
    </DialogTemplates>
</SfDialog>

@code {
    // 做為這個component的標籤屬性, 可以傳遞其他component的欄位或方法進來
    // 如 其他component中加入 <此component Branch="其他component的同類別欄位名" />
    // Branch將會被指派由其他component傳遞來的值
    [Parameter] public Branch Branch { get; set; } = new();
    [Parameter] public List<Department> Departments { get; set; } = new();
    [Parameter] public EventCallback<Branch> HandleSaveOperationEvent { get; set; }
    private bool IsVisible { get; set; } = false;
    public string Title { get; set; } = "Add";
    public async Task OpenDialog()
    {
        IsVisible = true;
        await ForceLoadDepartments();
        StateHasChanged();
    }

    async Task ForceLoadDepartments() => Departments = await departmentService.GetAll(Constants.DepartmentBaseUrl);

    async void Save()
    {
        if (string.IsNullOrEmpty(Branch.Name) || Branch.DepartmentId <= 0)
            await dialogService.AlertAsync("You need to provide name.", "Alert!");
        else
            await HandleSaveOperationEvent.InvokeAsync(Branch);
    }

    public void ChangeTitle(string title)
    {
        Title = title;
    }

    public void OnValueChange(ChangeEventArgs<string, Department> args)
    {
        Branch.DepartmentId = int.Parse(args.Value);
    }
}
